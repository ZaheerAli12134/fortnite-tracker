{"ast":null,"code":"const API_BASE_URL = 'https://fortnite-api.com/v2';\nconst API_KEY = process.env.REACT_APP_FN_API_KEY || 'your-api-key-here';\nconst rarityMap = {\n  'common': 'common',\n  'uncommon': 'uncommon',\n  'rare': 'rare',\n  'epic': 'epic',\n  'legendary': 'legendary',\n  'mythic': 'legendary',\n  'transcendent': 'legendary'\n};\nconst ALLOWED_TYPES = {\n  'outfit': 'skin',\n  'emote': 'emote',\n  'pickaxe': 'pickaxe',\n  'backpack': 'backbling'\n};\nexport const searchCosmetics = async (searchTerm, type = 'all') => {\n  try {\n    if (API_KEY === 'your-api-key-here') {\n      throw new Error('No API key configured');\n    }\n    const response = await fetch(`${API_BASE_URL}/cosmetics/br?language=en`, {\n      headers: {\n        'Authorization': API_KEY\n      }\n    });\n    if (!response.ok) {\n      const errorText = await response.text();\n      if (response.status === 401) {\n        throw new Error(`API Error 401: Unauthorized - Invalid API key. Check your key at fortnite-api.com`);\n      } else if (response.status === 403) {\n        throw new Error(`API Error 403: Forbidden - API key may be invalid or expired`);\n      } else if (response.status === 429) {\n        throw new Error(`API Error 429: Rate limited - Too many requests`);\n      } else {\n        throw new Error(`API request failed with status ${response.status}: ${response.statusText}. Response: ${errorText}`);\n      }\n    }\n    const data = await response.json();\n    if (!data.data) {\n      throw new Error('No cosmetics found in API response');\n    }\n    const filteredItems = data.data.filter(item => {\n      const isAllowedType = ALLOWED_TYPES.hasOwnProperty(item.type.value);\n      const matchesSearch = item.name.toLowerCase().includes(searchTerm.toLowerCase());\n      let matchesType = true;\n      if (type !== 'all') {\n        if (type === 'skin') {\n          matchesType = item.type.value === 'outfit';\n        } else if (type === 'emote') {\n          matchesType = item.type.value === 'emote';\n        } else if (type === 'pickaxe') {\n          matchesType = item.type.value === 'pickaxe';\n        } else if (type === 'backbling') {\n          matchesType = item.type.value === 'backpack';\n        }\n      }\n      return isAllowedType && matchesSearch && matchesType;\n    });\n    const transformedItems = filteredItems.slice(0, 20).map(item => {\n      var _item$introduction, _item$rarity;\n      return {\n        id: item.id,\n        name: item.name,\n        type: mapItemType(item.type.value),\n        rarity: rarityMap[item.rarity.value] || 'common',\n        imageUrl: item.images.icon,\n        lastSeen: calculateDaysSinceLastSeen(item),\n        price: item.price ? item.price : 800,\n        description: item.description,\n        introduction: ((_item$introduction = item.introduction) === null || _item$introduction === void 0 ? void 0 : _item$introduction.text) || 'Unknown season',\n        rarityName: ((_item$rarity = item.rarity) === null || _item$rarity === void 0 ? void 0 : _item$rarity.displayValue) || 'Common'\n      };\n    });\n    return transformedItems;\n  } catch (error) {\n    throw new Error(`Failed to search cosmetics: ${error.message}`);\n  }\n};\nexport const getCosmeticById = async id => {\n  try {\n    var _data$data$introducti, _data$data$rarity;\n    if (API_KEY === 'your-api-key-here') {\n      throw new Error('No API key configured');\n    }\n    const response = await fetch(`${API_BASE_URL}/cosmetics/br/${id}`, {\n      headers: {\n        'Authorization': API_KEY\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`API request failed with status ${response.status}`);\n    }\n    const data = await response.json();\n    if (!ALLOWED_TYPES[data.data.type.value]) {\n      throw new Error('Item type not allowed');\n    }\n    return {\n      id: data.data.id,\n      name: data.data.name,\n      type: mapItemType(data.data.type.value),\n      rarity: rarityMap[data.data.rarity.value] || 'common',\n      imageUrl: data.data.images.icon,\n      lastSeen: calculateDaysSinceLastSeen(data.data),\n      price: data.data.price || 800,\n      description: data.data.description,\n      introduction: ((_data$data$introducti = data.data.introduction) === null || _data$data$introducti === void 0 ? void 0 : _data$data$introducti.text) || 'Unknown season',\n      rarityName: ((_data$data$rarity = data.data.rarity) === null || _data$data$rarity === void 0 ? void 0 : _data$data$rarity.displayValue) || 'Common'\n    };\n  } catch (error) {\n    throw new Error(`Failed to fetch cosmetic: ${error.message}`);\n  }\n};\nconst mapItemType = apiType => {\n  return ALLOWED_TYPES[apiType] || 'other';\n};\nconst calculateDaysSinceLastSeen = item => {\n  if (!item.added) return 30;\n  const addedDate = new Date(item.added);\n  const today = new Date();\n  const diffTime = Math.abs(today - addedDate);\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  return Math.min(diffDays, 365);\n};","map":{"version":3,"names":["API_BASE_URL","API_KEY","process","env","REACT_APP_FN_API_KEY","rarityMap","ALLOWED_TYPES","searchCosmetics","searchTerm","type","Error","response","fetch","headers","ok","errorText","text","status","statusText","data","json","filteredItems","filter","item","isAllowedType","hasOwnProperty","value","matchesSearch","name","toLowerCase","includes","matchesType","transformedItems","slice","map","_item$introduction","_item$rarity","id","mapItemType","rarity","imageUrl","images","icon","lastSeen","calculateDaysSinceLastSeen","price","description","introduction","rarityName","displayValue","error","message","getCosmeticById","_data$data$introducti","_data$data$rarity","apiType","added","addedDate","Date","today","diffTime","Math","abs","diffDays","ceil","min"],"sources":["/home/paq/Desktop/Projetcs/fortnite-tracker/frontend/src/utils/fortniteData.js"],"sourcesContent":["const API_BASE_URL = 'https://fortnite-api.com/v2';\nconst API_KEY = process.env.REACT_APP_FN_API_KEY || 'your-api-key-here';\n\nconst rarityMap = {\n  'common': 'common',\n  'uncommon': 'uncommon', \n  'rare': 'rare',\n  'epic': 'epic',\n  'legendary': 'legendary',\n  'mythic': 'legendary',\n  'transcendent': 'legendary'\n};\n\nconst ALLOWED_TYPES = {\n  'outfit': 'skin',\n  'emote': 'emote', \n  'pickaxe': 'pickaxe',\n  'backpack': 'backbling'\n};\n\nexport const searchCosmetics = async (searchTerm, type = 'all') => {\n  try {\n    if (API_KEY === 'your-api-key-here') {\n      throw new Error('No API key configured');\n    }\n\n    const response = await fetch(`${API_BASE_URL}/cosmetics/br?language=en`, {\n      headers: {\n        'Authorization': API_KEY\n      }\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      if (response.status === 401) {\n        throw new Error(`API Error 401: Unauthorized - Invalid API key. Check your key at fortnite-api.com`);\n      } else if (response.status === 403) {\n        throw new Error(`API Error 403: Forbidden - API key may be invalid or expired`);\n      } else if (response.status === 429) {\n        throw new Error(`API Error 429: Rate limited - Too many requests`);\n      } else {\n        throw new Error(`API request failed with status ${response.status}: ${response.statusText}. Response: ${errorText}`);\n      }\n    }\n\n    const data = await response.json();\n    \n    if (!data.data) {\n      throw new Error('No cosmetics found in API response');\n    }\n\n    const filteredItems = data.data.filter(item => {\n      const isAllowedType = ALLOWED_TYPES.hasOwnProperty(item.type.value);\n      const matchesSearch = item.name.toLowerCase().includes(searchTerm.toLowerCase());\n      \n      let matchesType = true;\n      if (type !== 'all') {\n        if (type === 'skin') {\n          matchesType = item.type.value === 'outfit';\n        } else if (type === 'emote') {\n          matchesType = item.type.value === 'emote';\n        } else if (type === 'pickaxe') {\n          matchesType = item.type.value === 'pickaxe';\n        } else if (type === 'backbling') {\n          matchesType = item.type.value === 'backpack';\n        }\n      }\n      \n      return isAllowedType && matchesSearch && matchesType;\n    });\n\n    const transformedItems = filteredItems.slice(0, 20).map(item => ({\n      id: item.id,\n      name: item.name,\n      type: mapItemType(item.type.value),\n      rarity: rarityMap[item.rarity.value] || 'common',\n      imageUrl: item.images.icon,\n      lastSeen: calculateDaysSinceLastSeen(item),\n      price: item.price ? item.price : 800,\n      description: item.description,\n      introduction: item.introduction?.text || 'Unknown season',\n      rarityName: item.rarity?.displayValue || 'Common'\n    }));\n\n    return transformedItems;\n\n  } catch (error) {\n    throw new Error(`Failed to search cosmetics: ${error.message}`);\n  }\n};\n\nexport const getCosmeticById = async (id) => {\n  try {\n    if (API_KEY === 'your-api-key-here') {\n      throw new Error('No API key configured');\n    }\n\n    const response = await fetch(`${API_BASE_URL}/cosmetics/br/${id}`, {\n      headers: {\n        'Authorization': API_KEY\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error(`API request failed with status ${response.status}`);\n    }\n\n    const data = await response.json();\n    \n    if (!ALLOWED_TYPES[data.data.type.value]) {\n      throw new Error('Item type not allowed');\n    }\n    \n    return {\n      id: data.data.id,\n      name: data.data.name,\n      type: mapItemType(data.data.type.value),\n      rarity: rarityMap[data.data.rarity.value] || 'common',\n      imageUrl: data.data.images.icon,\n      lastSeen: calculateDaysSinceLastSeen(data.data),\n      price: data.data.price || 800,\n      description: data.data.description,\n      introduction: data.data.introduction?.text || 'Unknown season',\n      rarityName: data.data.rarity?.displayValue || 'Common'\n    };\n\n  } catch (error) {\n    throw new Error(`Failed to fetch cosmetic: ${error.message}`);\n  }\n};\n\nconst mapItemType = (apiType) => {\n  return ALLOWED_TYPES[apiType] || 'other';\n};\n\nconst calculateDaysSinceLastSeen = (item) => {\n  if (!item.added) return 30;\n  \n  const addedDate = new Date(item.added);\n  const today = new Date();\n  const diffTime = Math.abs(today - addedDate);\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  \n  return Math.min(diffDays, 365);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}